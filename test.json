1.1.	Problem Solving Steps
In order to solve a problem, it is important to follow a systematic approach. In the following we discuss different steps that can follow to solve a problem systematically.
1.1.1.	Defining a Problem
A well-defined problem is the one that does not contain ambiguities. All the conditions are clearly specified and it has a clear goal. It is easy to understand and solve.
Given a problem statement, first we need to see whether the problem is defined well or not. If the problem is not defined well then we can use one of the following strategies to define the problem.
Gain Background Knowledge: We try to know the situation and circumstances in which the problem is happening. In this way, we can identify the given state. It also helps to know what a good solution will look like. How we shall be able to measure the solution.
Use Guesses: We try to get the unknown information through appropriate guesses. The gases may be basis upon our past experiences.
Draw a Picture:  if the problem is not well-defined, we can draw a picture and fill the undefined information. Figure 1-1 shows pictorial representation of a problem. 
 
1.1.2.	Understanding a Problem 
It is important to understand the problem before jumping into the solution of the problem. For example, a riddle or a puzzle can be answered only after clear understanding. A clear understanding of a problem makes it easy easier to solve and help to save money, time and resources. Understanding of problem includes identification of the five Ws (what, who,  when, where, and why). Problem analysis is the process to figure out these 5 Ws from a problem statement. Problem analysis helps to understand a given problem. These are the basic elements which lead towards the solution of a given problem. For example, consider the following problem statement: 

“Suppose your class teacher assigns you a task to prepare a list of students in your school whose name start with letter ‘A’. The list is required in order to prepare an alphabetical directory of all school students and there is only one week to complete the task.”
 We can analyze this problem by identifying 5 Ws in the problem statement as given below:
•	What: List of students’ names starting with letter ‘A’.
•	Who: Students.
•	Why: to prepare the director of students
•	When: within a week 
•	Where: School 
Figure 1-2 shows the metaphorical representation of problem where the red light presents a problem, the yellow light represents its analysis and the green light presents the solution. It shows that problem analysis makes us closer to a solution.
 
1.1.3.	 Planning a Solution
After analyzing a problem, we formulate a plan that may lead us towards the solution of a problem. This phase includes finding the right strategy for problem solving. Some of the strategies are: 
•	Divide and Conquer: This strategy divides a complex problem into smaller problems. 
•	Guess, Check and Improve: The designer guesses a solution to a problem and then checks the correctness of the solution. If the solution is not according to the expectations, then he/she refines the solution. The refinement is an iterative process. 
•	Act it Out: In this strategy the designer defines the list of “to-do” tasks. Afterwards reforms he / she performs the task.
•	Prototype (Draw): This technique draws a pictorial representation of the solution. It is not the final solution. However, it may help a designer to understand the important components of the solution.
 The selection of a strategy depends upon the problem. It is quite important that one strategy may be more suitable to implement a solution then the other one. Very specifically, the selection of the strategy depends upon the nature of a problem.
1.1.4.	Defining Candid Solutions
The word Candid refers to something spontaneous and unplanned. For example, if you are asked to find number of students in your school who can play cricket. You can estimate by finding cricket players in your class and then multiplying it by the total number of classes in your school. Your answer in this way is the Candid solution. To find exact number of cricket players, you have to opt some other way, like visiting each class or getting data from teachers. One can think of a candid solution any time. A candid solution can help to safe time. In Figure 1-4, there are different ways shown to reach a certain place (which can be reached either by going across the wall or by going sideways) and the one you think can work, is the candid solution. It is not necessary that candid solution is the actual solution of a problem. 
 
1.1.5.	Selecting the best solution 
Sometime we find more than one solutions of a problem and select the best one amongst them. For Example, assume that names of all the students in your school are available on our website and you are to search a particular name. You can solve this search problem by either of the following methods: 
1.	Look at each number name on the website one by one until the name is found or the list is over. 
2.	Take printouts and search the required name. 
3.	Copy names, put them in Excel sheet and sort there in alphabetical order. Searching in a Sorted list is comparatively easy. 
4.	Just press Ctrl + F, when the list is available in a web browser. You can type the name to search automatically.
 There can be other solutions as well. Now we can identify a solution that has less number of steps or that seems more effective based on some criteria.

1.2.	 Flowchart
 Flowcharts are helpful to know about the steps to solve a problem. In the following we discuss the concept of flowcharts in detail. 
1.2.1.	 Definition
 A flowchart is a graphical representation of the steps to solve a problem. We use symbols for each step, and these symbols are connected with the help of arrows to show the flow of processing. 
Figure 1-6 shows a flowchart for the simple problem of wearing shoes with socks. It shows that not only the steps are important but also the order to complete a process. A flowchart is used to visually communicate the steps in a process. 
1.2.2.	Importance of flowchart in problem solving 
In problem solving, flowcharts can be used to plan a solution. If a flowchart is already there, we can quickly understand the way a problem is solved. It is more effective to visualize a solution graphically then a text. A graphical representation also makes it effective to verify whether a solution is correct or not. It is also a good way to communicate the solution of a problem to other people. 
1.2.3.	Determining requirements for a flowchart 
In a flowchart we use input, output decision making and processing. These concepts are described in the following:  input makes taking data from a user, processing it and give some output as shown in Figure 1.7. For a flowchart the requirements are to know about: 
•	Inputs: input means taking data from the user. It is important to know, how many and what type of inputs are required. 
•	Processing: A flowchart also contains processing steps. The processing steps are used for performing calculations and storing the results of calculations. These may include increasing/ decreasing a value, adding/multiplying/dividing two values etc. 
•	Decision making: To determine whether a statement is true or false and taking appropriate steps accordingly, is called decision making. 
•	Outputs: Outputs are used to display information and usually this information exhibits the processed results.
1.2.4.	Flowchart symbols 
Flowchart explains a process clearly through symbols and text. They use special shapes to represent different types of fractions for steps in a process. Lines and arrows show the flow of the steps. Table 1.1 shows some of the most widely used symbols in flowcharts. 
 
1.2.5.	Examples of flowcharts 
In this section we study problem solving using flow charts. In a flowchart, Input means to get data from some input device and store in computer memory. A data in memory is given some particular name. We access data with respect to its given name to perform some computation from which results are obtained. The results are stored in computer memory and we print (display) the results on some output device. 
1.	To convert Celsius to Fahrenheit temperature.
This flowchart shows that after Start, a computer user provides some numeric data which is stored in computer memory with the name Celsius. In the next step, the result is computed by applying the formula to convert the given Celsius temperature to Fahrenheit temperature. The result is stored with name Fahrenheit. The value stored with name Fahrenheit is then displayed by using some output device. Next the flowchart is ended. 
2.	To find acceleration of a moving object with given mass and the force applied.	3.	To find the volume of cube.	4.	To find plane the intrest on an amount.
 

 Conditional flow in flowcharts: 
In the following flowcharts, we study that a flow between steps can depend upon a certain condition.  If the condition is true then the flowchart is different from when the condition is false. A condition is always evaluated at either as true or false.
7.	 To determine whether a given number is odd or even. 



 In the above flowchart, after the start step a numeric value is taken from user and stored in computer memory with name n. Then this value is divided by 2 and remainder is stored in memory with name Rem. To calculate the remainder mod function is applied. We performed a conditional operation to check whether n is completely divided by 2 or not. This is done by comparing the value of Rem with 0. If Rem is 0, the conditional operation gives a True Value. It means that n is even because it is completely divisible by 2. On the other hand If Ram is not zero; the conditional operation gives false value. It means that n is odd. 
8.	To display the larger one out of the three given an unequal equal numbers 









Following Flowchart shows another solution to find a maximum value among three numbers a b and c. 
 
 
9.	To assign a grade to a subject based on total marks and obtained marks 

 
10.	To determine name of a week day from a given number where we take our assume from Monday to Sunday and their respective numbers from 1 to 7. 
 
Repeating steps in flowcharts: In all of the above flowcharts, the flow is from top to bottom but it is also possible that the flow may go to a previous step, especially when we need to repeat some steps. 
In the following, we show some flowcharts containing steps that are repeated. 
11.	To input 5 values one by one and determine if the given value is odd or even 

 
The above algorithm uses a count to keep counting the number of input given by user. So we initially give it the value 0 and increase it by 1 after every input. After printing even or odd we compare it with 5. If the Count reaches to 5, we stop the flow or otherwise transfer it to input another value. 
12.	To find a sequence of odd numbers starting from a given number till some limit 
 
1.3.	Algorithm 
Studying algorithms is a fundamental part of Computer Science. In this section coma we discuss the concept of algorithms in detail. 
1.3.1.	Definition 
An algorithm is a step set of steps to solve a problem. It is written in a natural language, so it is easily understandable by humans.  For example, to solve the problem of preparing tea, we can follow the following steps. 
a)	Start  
b)	Take a kettle 
c)	Pour water in it 
d)	Put the kettle on fire 
e)	Add sugar and milk 
f)	Wait till it boils 
g)	Remove the cattle from fire 
h)	End 
The above set of steps can be called an algorithm for tea preparation. 
We can also solve certain problems with the help of a computer. For that purpose, we first formulate an algorithm for the problem and then translate that algorithm into a set of instructions for the computer. Usually at algorithm takes an Input and then after processing produces some output as shown in figure 1-6.
 
1.3.2.	Role of algorithm in problem solving 
An algorithm has a vital role in problem solving as it provides a step by step Guide to the problem solver. It is a complete description of the solution. Usually a computer programmer first writes and algorithm and then translate it into the code of some programming language. Sometimes, the designer of the program first makes a flowchart to solve a problem and then encodes the flowchart into an algorithm. Figure 1-8 shows the role of algorithm in problem solving.
 
1.3.3.	Formulation of an algorithm 
There is different notation (keywords) to write an algorithm idiot reuse the notations presented in table 1-2 to write an algorithm 
Notation	Meaning
Start 
	It is the starting point of an algorithm. Every algorithm must have one starting (entry) point. 
Input 
	It is used to get input from a user and store it in Computer memory with some name. 
Set 
	It is used to give name to data in Computer memory. It is also used to update the value of existing data. 
If, else 
	It is used to check the condition. For example, ok the condition like if (a<b). A condition is evaluated it is true or false. In case the condition is true then the statements related with if part is executed otherwise the statements of else part are executed. Usage: Suppose a=5 and b=7, if (a<5) set c to 10 else Set c to 20. 
Writing else part is optional. 
Goto 	It is used to transfer control to a certain step of an algorithm. It is usually required in loops. 
Output 	It is used to display values. 
Stop	it is the termination point of an algorithm. 

1.3.4.	Examples of algorithms 
To find the sum, product and average of 5 given number. 
In this algorithm, step 1 shows starting of the algorithm. Step 2 shows that a user provides 5 numeric values and they are stored in Computer memory with the number n0 n1 n2 n3 and n4. Step 3 shows summation of all the input values and storing the result in Computer memory with name sum. Similarly, step 4 is used to compute multiplication all the numbers and store the result with name product. In step 5, formula to calculate average of 5 numbers is applied and the result is stored with name average. The step 6 shows the results of t an algorithm is considered more efficient he steps 3, 4 and 5 respectively. The Step 7 shows end of the algorithm.
1.3.5.	Efficiency of algorithms 
There can be more than one algorithm to solve the same problem. Which one is better, depends upon the efficiency of the available solution algorithms. Efficiency of an algorithm is measured on the basis of 2 metric, 
1.	Number of steps an algorithm is considered more efficient if it takes less number of steps to reach the results. 
2.	Space used in computer memory: We have observed in algorithm that some data is stored in Computer memory which is latter used to give results. An algorithm using less space in Computer memory is considered more efficient with respect to memory space. 
It is quite possible that an algorithm takes less space in memory and has more number of steps whereas the other algorithm takes more memory and has less number of steps. In this case there is a tradeoff between numbers of steps. The designer can take decision according to the requirement and the consumed memory. 
1.3.6.	Difference between an algorithm and a flowchart 
Difference between an algorithm and a flow chart is just like the difference between a story and a movie. As we have studied that a flowchart is a graphical representation of a process to solve a problem but an algorithm write the same steps in a human understandable language.
Advantages of flowchart 
•	easy to draw 
•	easy to understand problem solving 
•	easy to identify errors if any 
•	easy to observe flow from one step to the other 
Disadvantages of a flowchart 
•	more time is required to draw a flowchart 
•	modifying a flowchart is not very easy every time
•	 it is not suitable for very large problem 
Advantages of an algorithm 
•	easy to write 
•	techniques to write and algorithm are easy to understand. 
•	To solve a large problem algorithms are helpful 
Disadvantages of an algorithm 
•	Modifying an algorithm is not very easy every time. 
•	Showing the flow from one step to the other is not very easy 
•	usage of go to make it difficult to identify errors
